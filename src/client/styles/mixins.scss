@mixin flex($dir: column, $justify: null, $align: null, $wrap: null) {
  display: flex;
  flex-direction: $dir;
  @if $justify { justify-content: $justify };
  @if $align { align-items: $align; }
  @if $wrap { flex-wrap: $wrap; }
}

@mixin breakpoint($size) {
  @media screen and (min-width: map-get($breakpoints, $size)) {
    @content;
  }
}

@mixin fixed($top: 0, $right: 0, $bottom: 0, $left: 0) {
  position: fixed;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin full {
  width: 100%;
  height: 100%;
}

@mixin dark {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

@mixin margin-h($val) {
  margin-left: $val;
  margin-right: $val;
}

@mixin margin-v($val) {
  margin-top: $val;
  margin-bottom: $val;
}

@mixin padding-h($val) {
  padding-left: $val;
  padding-right: $val;
}

@mixin padding-v($val) {
  padding-top: $val;
  padding-bottom: $val;
}

// Utility

@mixin clearfix {
  &:before,
  &:after {
    content: ' ';
    display: table;
    clear: both;
  }
}

// Typography

@mixin font-face($name, $src, $weight: 400, $style: 'normal') {
  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: url(quote($src + '.woff2')) format('woff2'),
      url(quote($src + '.woff')) format('woff');
  }
}

@mixin activatable {
  opacity: 0;
  pointer-events: none;
  &.active {
    opacity: 1;
    pointer-events: auto;
  }
}

@mixin selectable {
  color: inherit;
  &.selected {
    color: #369;
  }
}

@mixin pointable {
  cursor: pointer;
}
